package hexstringtobytearray_v1;

import javax.xml.bind.DatatypeConverter;

public class HexStringtoByteArray_v1 
{
    public static String image_hexStr
    public static byte[] imageBytes;

    public static void main(String[] args) 
    {
        //run conversion function (convert hex values in String into Byte integers)
        imageBytes = HexStringToByteArray( image_hexStr );

        System.out.println("Byte value 0 : "  + imageBytes[0] );
        System.out.println("Byte value 1 : "  + imageBytes[1] );
        System.out.println("Byte value 2 : "  + imageBytes[2] );
        System.out.println("Byte value 3 : "  + imageBytes[3] );
    }

    public static byte[] HexStringToByteArray(String input) 
    { return DatatypeConverter.parseHexBinary( input ); }

}