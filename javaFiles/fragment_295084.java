if ( Multimap.class.isAssignableFrom(typeToken.getRawType()) ) {
    final Type type = typeToken.getType();
    if ( type instanceof ParameterizedType ) {
        final ParameterizedType parameterizedType = (ParameterizedType) type;
        final Type actualTypeArg0 = parameterizedType.getActualTypeArguments()[0];
        // raw java.lang.Class (Class.class, Class.forName("java.lang.Class"), etc)
        if ( actualTypeArg0 == Class.class ) {
            return true;
        }
        // or maybe it's something like a Class<...> instance that:
        // * can be generated by javac when you parameterize a type (this is why Gson TypeToken's look "weird")
        // * or create a ParameterizedType instance yourself, say using TypeToken.getParameterized or your custom ParameterizedType implementation
        if ( actualTypeArg0 instanceof ParameterizedType && ((ParameterizedType) actualTypeArg0).getRawType() == Class.class ) {
            return true;
        }
    }
}
return false;