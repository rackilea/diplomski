//  @Modifying
    @Query(value = " "
    //close
//  + "INSERT INTO status (is_open,advertisement, updated) "
//  + "SELECT "
//  + " false, to_close.id, NOW() "
//  + "FROM( "
//  + " SELECT " 
//  + "             ad.id as id, " 
//  + "             ad.native_id as native_id, " 
//  + "             sc_newest.updated as updated, " 
//  + "             status.is_open as is_open " 
//  + " FROM advertisement AS ad " 
//  + " LEFT JOIN " 
//  + "         (SELECT "
//  + "             MAX(sc.UPDATED) AS updated, "
//  + "             sc.ADVERTISEMENT "
//  + "         FROM ADVERTISEMENT AS ad "
//  + "         LEFT JOIN STATUS AS sc "
//  + "             ON  ad.ID = sc.ADVERTISEMENT "
//  + "         WHERE   ad.NATIVE_ID NOT IN  :shown_ads "
//  + "         GROUP BY sc.advertisement) AS sc_newest "
//  + "     ON ad.id = sc_newest.advertisement "
//  + " LEFT JOIN status AS status "
//  + "     ON ad.id = status.advertisement AND status.updated = sc_newest.updated "
//  + " WHERE "
//  + "     status.is_open = true " 
//  + "     AND ad.native_id NOT IN :shown_ads) AS to_close ; "
//  + ""
    //reopen
//  + "INSERT INTO status (is_open,advertisement, updated) "
//  + "SELECT "
//  + " true, to_reopen.id, NOW() "
//  + "FROM( "
//  + " SELECT " 
//  + "             ad.id as id, " 
//  + " FROM advertisement AS ad " 
//  + " LEFT JOIN " 
//  + "             (SELECT "
//  + "                 MAX(sc.updated) AS updated, " 
//  + "                 sc.advertisement " 
//  + "             FROM status AS sc "
//  + "             GROUP BY sc.advertisement) AS sc_newest "
//  + "     ON ad.id = sc_newest.advertisement "
//  + " LEFT JOIN status AS status "
//  + "     ON ad.id = status.advertisement AND status.updated = sc_newest.updated "
//  + " WHERE "
//  + "     status.is_open = false " //reopen closed 
//  + "     AND ad.native_id NOT IN :shown_ads) AS to_reopen ; "
//  + ""
    // get stored previously 
    + " SELECT "
    + " advertisement.native_id "
    + "FROM advertisement "
    + " WHERE "
    + " advertisement.native_id IN :shown_ads "
            , nativeQuery = true)

    public List<String> closeReopenFindStored(@Param("shown_ads") List<String> shownNaturalIDs);


    @Modifying
    @Query(value = "INSERT INTO status (is_open,advertisement, updated) "
    + "SELECT "
    + " false, to_close.id, NOW() "
    + "FROM( "
    + " SELECT " 
    + "             ad.id as id, " 
    + "             ad.native_id as native_id, " 
    + "             sc_newest.updated as updated, " 
    + "             status.is_open as is_open " 
    + " FROM advertisement AS ad " 
    + " LEFT JOIN " 
    + "         (SELECT "
    + "             MAX(sc.UPDATED) AS updated, "
    + "             sc.ADVERTISEMENT "
    + "         FROM ADVERTISEMENT AS ad "
    + "         LEFT JOIN STATUS AS sc "
    + "             ON  ad.ID = sc.ADVERTISEMENT "
    + "         WHERE   ad.NATIVE_ID NOT IN  :shown_ads "
    + "         GROUP BY sc.advertisement) AS sc_newest "
    + "     ON ad.id = sc_newest.advertisement "
    + " LEFT JOIN status AS status "
    + "     ON ad.id = status.advertisement AND status.updated = sc_newest.updated "
    + " WHERE "
    + "     status.is_open = true " 
    + "     AND ad.native_id NOT IN :shown_ads) AS to_close ; "
    + "", nativeQuery = true)
    public void saveCloseReopenFindStored(@Param("shown_ads") List<String> shownNaturalIDs);